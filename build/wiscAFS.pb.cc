// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wiscAFS.proto

#include "wiscAFS.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace wiscAFS {
PROTOBUF_CONSTEXPR ReadDirReq::ReadDirReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.path_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReadDirReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReadDirReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReadDirReqDefaultTypeInternal() {}
  union {
    ReadDirReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReadDirReqDefaultTypeInternal _ReadDirReq_default_instance_;
PROTOBUF_CONSTEXPR ReadDirReply::ReadDirReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.buf_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.err_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReadDirReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReadDirReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReadDirReplyDefaultTypeInternal() {}
  union {
    ReadDirReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReadDirReplyDefaultTypeInternal _ReadDirReply_default_instance_;
PROTOBUF_CONSTEXPR MkDirReq::MkDirReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.path_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.mode_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MkDirReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MkDirReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MkDirReqDefaultTypeInternal() {}
  union {
    MkDirReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MkDirReqDefaultTypeInternal _MkDirReq_default_instance_;
PROTOBUF_CONSTEXPR MkDirReply::MkDirReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.err_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MkDirReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MkDirReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MkDirReplyDefaultTypeInternal() {}
  union {
    MkDirReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MkDirReplyDefaultTypeInternal _MkDirReply_default_instance_;
PROTOBUF_CONSTEXPR RmDirReq::RmDirReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.path_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RmDirReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RmDirReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RmDirReqDefaultTypeInternal() {}
  union {
    RmDirReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RmDirReqDefaultTypeInternal _RmDirReq_default_instance_;
PROTOBUF_CONSTEXPR RmDirReply::RmDirReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.err_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RmDirReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RmDirReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RmDirReplyDefaultTypeInternal() {}
  union {
    RmDirReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RmDirReplyDefaultTypeInternal _RmDirReply_default_instance_;
PROTOBUF_CONSTEXPR GetAttrReq::GetAttrReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.path_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.buf_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAttrReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAttrReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAttrReqDefaultTypeInternal() {}
  union {
    GetAttrReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAttrReqDefaultTypeInternal _GetAttrReq_default_instance_;
PROTOBUF_CONSTEXPR GetAttrReply::GetAttrReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.buf_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.err_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAttrReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAttrReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAttrReplyDefaultTypeInternal() {}
  union {
    GetAttrReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAttrReplyDefaultTypeInternal _GetAttrReply_default_instance_;
PROTOBUF_CONSTEXPR OpenReq::OpenReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.path_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.flag_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OpenReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OpenReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OpenReqDefaultTypeInternal() {}
  union {
    OpenReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OpenReqDefaultTypeInternal _OpenReq_default_instance_;
PROTOBUF_CONSTEXPR OpenReply::OpenReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.err_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OpenReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OpenReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OpenReplyDefaultTypeInternal() {}
  union {
    OpenReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OpenReplyDefaultTypeInternal _OpenReply_default_instance_;
PROTOBUF_CONSTEXPR ReadReq::ReadReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.path_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.size_)*/0
  , /*decltype(_impl_.offset_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReadReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReadReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReadReqDefaultTypeInternal() {}
  union {
    ReadReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReadReqDefaultTypeInternal _ReadReq_default_instance_;
PROTOBUF_CONSTEXPR ReadReply::ReadReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.buf_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.num_bytes_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReadReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReadReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReadReplyDefaultTypeInternal() {}
  union {
    ReadReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReadReplyDefaultTypeInternal _ReadReply_default_instance_;
PROTOBUF_CONSTEXPR WriteReq::WriteReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.path_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.buf_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.size_)*/0
  , /*decltype(_impl_.offset_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WriteReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WriteReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WriteReqDefaultTypeInternal() {}
  union {
    WriteReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WriteReqDefaultTypeInternal _WriteReq_default_instance_;
PROTOBUF_CONSTEXPR WriteReply::WriteReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.num_bytes_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WriteReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WriteReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WriteReplyDefaultTypeInternal() {}
  union {
    WriteReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WriteReplyDefaultTypeInternal _WriteReply_default_instance_;
PROTOBUF_CONSTEXPR HelloRequest::HelloRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct HelloRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HelloRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HelloRequestDefaultTypeInternal() {}
  union {
    HelloRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HelloRequestDefaultTypeInternal _HelloRequest_default_instance_;
PROTOBUF_CONSTEXPR HelloReply::HelloReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct HelloReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HelloReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HelloReplyDefaultTypeInternal() {}
  union {
    HelloReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HelloReplyDefaultTypeInternal _HelloReply_default_instance_;
}  // namespace wiscAFS
static ::_pb::Metadata file_level_metadata_wiscAFS_2eproto[16];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_wiscAFS_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_wiscAFS_2eproto = nullptr;

const uint32_t TableStruct_wiscAFS_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::ReadDirReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::ReadDirReq, _impl_.path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::ReadDirReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::ReadDirReply, _impl_.err_),
  PROTOBUF_FIELD_OFFSET(::wiscAFS::ReadDirReply, _impl_.buf_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::MkDirReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::MkDirReq, _impl_.path_),
  PROTOBUF_FIELD_OFFSET(::wiscAFS::MkDirReq, _impl_.mode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::MkDirReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::MkDirReply, _impl_.err_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::RmDirReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::RmDirReq, _impl_.path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::RmDirReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::RmDirReply, _impl_.err_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::GetAttrReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::GetAttrReq, _impl_.path_),
  PROTOBUF_FIELD_OFFSET(::wiscAFS::GetAttrReq, _impl_.buf_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::GetAttrReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::GetAttrReply, _impl_.buf_),
  PROTOBUF_FIELD_OFFSET(::wiscAFS::GetAttrReply, _impl_.err_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::OpenReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::OpenReq, _impl_.path_),
  PROTOBUF_FIELD_OFFSET(::wiscAFS::OpenReq, _impl_.flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::OpenReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::OpenReply, _impl_.err_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::ReadReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::ReadReq, _impl_.path_),
  PROTOBUF_FIELD_OFFSET(::wiscAFS::ReadReq, _impl_.size_),
  PROTOBUF_FIELD_OFFSET(::wiscAFS::ReadReq, _impl_.offset_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::ReadReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::ReadReply, _impl_.num_bytes_),
  PROTOBUF_FIELD_OFFSET(::wiscAFS::ReadReply, _impl_.buf_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::WriteReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::WriteReq, _impl_.path_),
  PROTOBUF_FIELD_OFFSET(::wiscAFS::WriteReq, _impl_.buf_),
  PROTOBUF_FIELD_OFFSET(::wiscAFS::WriteReq, _impl_.size_),
  PROTOBUF_FIELD_OFFSET(::wiscAFS::WriteReq, _impl_.offset_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::WriteReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::WriteReply, _impl_.num_bytes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::HelloRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::HelloRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::HelloReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wiscAFS::HelloReply, _impl_.message_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::wiscAFS::ReadDirReq)},
  { 7, -1, -1, sizeof(::wiscAFS::ReadDirReply)},
  { 15, -1, -1, sizeof(::wiscAFS::MkDirReq)},
  { 23, -1, -1, sizeof(::wiscAFS::MkDirReply)},
  { 30, -1, -1, sizeof(::wiscAFS::RmDirReq)},
  { 37, -1, -1, sizeof(::wiscAFS::RmDirReply)},
  { 44, -1, -1, sizeof(::wiscAFS::GetAttrReq)},
  { 52, -1, -1, sizeof(::wiscAFS::GetAttrReply)},
  { 60, -1, -1, sizeof(::wiscAFS::OpenReq)},
  { 68, -1, -1, sizeof(::wiscAFS::OpenReply)},
  { 75, -1, -1, sizeof(::wiscAFS::ReadReq)},
  { 84, -1, -1, sizeof(::wiscAFS::ReadReply)},
  { 92, -1, -1, sizeof(::wiscAFS::WriteReq)},
  { 102, -1, -1, sizeof(::wiscAFS::WriteReply)},
  { 109, -1, -1, sizeof(::wiscAFS::HelloRequest)},
  { 116, -1, -1, sizeof(::wiscAFS::HelloReply)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::wiscAFS::_ReadDirReq_default_instance_._instance,
  &::wiscAFS::_ReadDirReply_default_instance_._instance,
  &::wiscAFS::_MkDirReq_default_instance_._instance,
  &::wiscAFS::_MkDirReply_default_instance_._instance,
  &::wiscAFS::_RmDirReq_default_instance_._instance,
  &::wiscAFS::_RmDirReply_default_instance_._instance,
  &::wiscAFS::_GetAttrReq_default_instance_._instance,
  &::wiscAFS::_GetAttrReply_default_instance_._instance,
  &::wiscAFS::_OpenReq_default_instance_._instance,
  &::wiscAFS::_OpenReply_default_instance_._instance,
  &::wiscAFS::_ReadReq_default_instance_._instance,
  &::wiscAFS::_ReadReply_default_instance_._instance,
  &::wiscAFS::_WriteReq_default_instance_._instance,
  &::wiscAFS::_WriteReply_default_instance_._instance,
  &::wiscAFS::_HelloRequest_default_instance_._instance,
  &::wiscAFS::_HelloReply_default_instance_._instance,
};

const char descriptor_table_protodef_wiscAFS_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rwiscAFS.proto\022\007wiscAFS\"\032\n\nReadDirReq\022\014"
  "\n\004path\030\001 \001(\t\"(\n\014ReadDirReply\022\013\n\003err\030\001 \001("
  "\005\022\013\n\003buf\030\002 \001(\014\"&\n\010MkDirReq\022\014\n\004path\030\001 \001(\t"
  "\022\014\n\004mode\030\002 \001(\005\"\031\n\nMkDirReply\022\013\n\003err\030\001 \001("
  "\005\"\030\n\010RmDirReq\022\014\n\004path\030\001 \001(\t\"\031\n\nRmDirRepl"
  "y\022\013\n\003err\030\001 \001(\005\"\'\n\nGetAttrReq\022\014\n\004path\030\001 \001"
  "(\t\022\013\n\003buf\030\002 \001(\014\"(\n\014GetAttrReply\022\013\n\003buf\030\002"
  " \001(\014\022\013\n\003err\030\001 \001(\005\"%\n\007OpenReq\022\014\n\004path\030\001 \001"
  "(\t\022\014\n\004flag\030\002 \001(\005\"\030\n\tOpenReply\022\013\n\003err\030\001 \001"
  "(\005\"5\n\007ReadReq\022\014\n\004path\030\001 \001(\t\022\014\n\004size\030\002 \001("
  "\005\022\016\n\006offset\030\003 \001(\005\"+\n\tReadReply\022\021\n\tnum_by"
  "tes\030\001 \001(\005\022\013\n\003buf\030\002 \001(\014\"C\n\010WriteReq\022\014\n\004pa"
  "th\030\001 \001(\t\022\013\n\003buf\030\002 \001(\014\022\014\n\004size\030\003 \001(\005\022\016\n\006o"
  "ffset\030\004 \001(\005\"\037\n\nWriteReply\022\021\n\tnum_bytes\030\001"
  " \001(\005\"\034\n\014HelloRequest\022\014\n\004name\030\001 \001(\t\"\035\n\nHe"
  "lloReply\022\017\n\007message\030\001 \001(\t2\264\003\n\007WiscAFS\0227\n"
  "\007GetAttr\022\023.wiscAFS.GetAttrReq\032\025.wiscAFS."
  "GetAttrReply\"\000\022.\n\004Open\022\020.wiscAFS.OpenReq"
  "\032\022.wiscAFS.OpenReply\"\000\0220\n\004Read\022\020.wiscAFS"
  ".ReadReq\032\022.wiscAFS.ReadReply\"\0000\001\0223\n\005Writ"
  "e\022\021.wiscAFS.WriteReq\032\023.wiscAFS.WriteRepl"
  "y\"\000(\001\0229\n\007ReadDir\022\023.wiscAFS.ReadDirReq\032\025."
  "wiscAFS.ReadDirReply\"\0000\001\0221\n\005MkDir\022\021.wisc"
  "AFS.MkDirReq\032\023.wiscAFS.MkDirReply\"\000\0221\n\005R"
  "mDir\022\021.wiscAFS.RmDirReq\032\023.wiscAFS.RmDirR"
  "eply\"\000\0228\n\010SayHello\022\025.wiscAFS.HelloReques"
  "t\032\023.wiscAFS.HelloReply\"\000B\022\n\020io.grpc.exam"
  "plesb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_wiscAFS_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_wiscAFS_2eproto = {
    false, false, 1092, descriptor_table_protodef_wiscAFS_2eproto,
    "wiscAFS.proto",
    &descriptor_table_wiscAFS_2eproto_once, nullptr, 0, 16,
    schemas, file_default_instances, TableStruct_wiscAFS_2eproto::offsets,
    file_level_metadata_wiscAFS_2eproto, file_level_enum_descriptors_wiscAFS_2eproto,
    file_level_service_descriptors_wiscAFS_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_wiscAFS_2eproto_getter() {
  return &descriptor_table_wiscAFS_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_wiscAFS_2eproto(&descriptor_table_wiscAFS_2eproto);
namespace wiscAFS {

// ===================================================================

class ReadDirReq::_Internal {
 public:
};

ReadDirReq::ReadDirReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:wiscAFS.ReadDirReq)
}
ReadDirReq::ReadDirReq(const ReadDirReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReadDirReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.path_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_path().empty()) {
    _this->_impl_.path_.Set(from._internal_path(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:wiscAFS.ReadDirReq)
}

inline void ReadDirReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.path_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ReadDirReq::~ReadDirReq() {
  // @@protoc_insertion_point(destructor:wiscAFS.ReadDirReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReadDirReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.path_.Destroy();
}

void ReadDirReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReadDirReq::Clear() {
// @@protoc_insertion_point(message_clear_start:wiscAFS.ReadDirReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadDirReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "wiscAFS.ReadDirReq.path"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReadDirReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wiscAFS.ReadDirReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "wiscAFS.ReadDirReq.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wiscAFS.ReadDirReq)
  return target;
}

size_t ReadDirReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wiscAFS.ReadDirReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReadDirReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReadDirReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReadDirReq::GetClassData() const { return &_class_data_; }


void ReadDirReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReadDirReq*>(&to_msg);
  auto& from = static_cast<const ReadDirReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:wiscAFS.ReadDirReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReadDirReq::CopyFrom(const ReadDirReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wiscAFS.ReadDirReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadDirReq::IsInitialized() const {
  return true;
}

void ReadDirReq::InternalSwap(ReadDirReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.path_, lhs_arena,
      &other->_impl_.path_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadDirReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wiscAFS_2eproto_getter, &descriptor_table_wiscAFS_2eproto_once,
      file_level_metadata_wiscAFS_2eproto[0]);
}

// ===================================================================

class ReadDirReply::_Internal {
 public:
};

ReadDirReply::ReadDirReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:wiscAFS.ReadDirReply)
}
ReadDirReply::ReadDirReply(const ReadDirReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReadDirReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.buf_){}
    , decltype(_impl_.err_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.buf_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.buf_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_buf().empty()) {
    _this->_impl_.buf_.Set(from._internal_buf(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.err_ = from._impl_.err_;
  // @@protoc_insertion_point(copy_constructor:wiscAFS.ReadDirReply)
}

inline void ReadDirReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.buf_){}
    , decltype(_impl_.err_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.buf_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.buf_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ReadDirReply::~ReadDirReply() {
  // @@protoc_insertion_point(destructor:wiscAFS.ReadDirReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReadDirReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.buf_.Destroy();
}

void ReadDirReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReadDirReply::Clear() {
// @@protoc_insertion_point(message_clear_start:wiscAFS.ReadDirReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.buf_.ClearToEmpty();
  _impl_.err_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadDirReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 err = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.err_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes buf = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_buf();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReadDirReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wiscAFS.ReadDirReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 err = 1;
  if (this->_internal_err() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_err(), target);
  }

  // bytes buf = 2;
  if (!this->_internal_buf().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_buf(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wiscAFS.ReadDirReply)
  return target;
}

size_t ReadDirReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wiscAFS.ReadDirReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes buf = 2;
  if (!this->_internal_buf().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_buf());
  }

  // int32 err = 1;
  if (this->_internal_err() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_err());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReadDirReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReadDirReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReadDirReply::GetClassData() const { return &_class_data_; }


void ReadDirReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReadDirReply*>(&to_msg);
  auto& from = static_cast<const ReadDirReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:wiscAFS.ReadDirReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_buf().empty()) {
    _this->_internal_set_buf(from._internal_buf());
  }
  if (from._internal_err() != 0) {
    _this->_internal_set_err(from._internal_err());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReadDirReply::CopyFrom(const ReadDirReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wiscAFS.ReadDirReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadDirReply::IsInitialized() const {
  return true;
}

void ReadDirReply::InternalSwap(ReadDirReply* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.buf_, lhs_arena,
      &other->_impl_.buf_, rhs_arena
  );
  swap(_impl_.err_, other->_impl_.err_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadDirReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wiscAFS_2eproto_getter, &descriptor_table_wiscAFS_2eproto_once,
      file_level_metadata_wiscAFS_2eproto[1]);
}

// ===================================================================

class MkDirReq::_Internal {
 public:
};

MkDirReq::MkDirReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:wiscAFS.MkDirReq)
}
MkDirReq::MkDirReq(const MkDirReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MkDirReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.path_){}
    , decltype(_impl_.mode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_path().empty()) {
    _this->_impl_.path_.Set(from._internal_path(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.mode_ = from._impl_.mode_;
  // @@protoc_insertion_point(copy_constructor:wiscAFS.MkDirReq)
}

inline void MkDirReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.path_){}
    , decltype(_impl_.mode_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MkDirReq::~MkDirReq() {
  // @@protoc_insertion_point(destructor:wiscAFS.MkDirReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MkDirReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.path_.Destroy();
}

void MkDirReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MkDirReq::Clear() {
// @@protoc_insertion_point(message_clear_start:wiscAFS.MkDirReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  _impl_.mode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MkDirReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "wiscAFS.MkDirReq.path"));
        } else
          goto handle_unusual;
        continue;
      // int32 mode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.mode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MkDirReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wiscAFS.MkDirReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "wiscAFS.MkDirReq.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  // int32 mode = 2;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wiscAFS.MkDirReq)
  return target;
}

size_t MkDirReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wiscAFS.MkDirReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // int32 mode = 2;
  if (this->_internal_mode() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MkDirReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MkDirReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MkDirReq::GetClassData() const { return &_class_data_; }


void MkDirReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MkDirReq*>(&to_msg);
  auto& from = static_cast<const MkDirReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:wiscAFS.MkDirReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if (from._internal_mode() != 0) {
    _this->_internal_set_mode(from._internal_mode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MkDirReq::CopyFrom(const MkDirReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wiscAFS.MkDirReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MkDirReq::IsInitialized() const {
  return true;
}

void MkDirReq::InternalSwap(MkDirReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.path_, lhs_arena,
      &other->_impl_.path_, rhs_arena
  );
  swap(_impl_.mode_, other->_impl_.mode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MkDirReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wiscAFS_2eproto_getter, &descriptor_table_wiscAFS_2eproto_once,
      file_level_metadata_wiscAFS_2eproto[2]);
}

// ===================================================================

class MkDirReply::_Internal {
 public:
};

MkDirReply::MkDirReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:wiscAFS.MkDirReply)
}
MkDirReply::MkDirReply(const MkDirReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MkDirReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.err_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.err_ = from._impl_.err_;
  // @@protoc_insertion_point(copy_constructor:wiscAFS.MkDirReply)
}

inline void MkDirReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.err_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MkDirReply::~MkDirReply() {
  // @@protoc_insertion_point(destructor:wiscAFS.MkDirReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MkDirReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void MkDirReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MkDirReply::Clear() {
// @@protoc_insertion_point(message_clear_start:wiscAFS.MkDirReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.err_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MkDirReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 err = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.err_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MkDirReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wiscAFS.MkDirReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 err = 1;
  if (this->_internal_err() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_err(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wiscAFS.MkDirReply)
  return target;
}

size_t MkDirReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wiscAFS.MkDirReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 err = 1;
  if (this->_internal_err() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_err());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MkDirReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MkDirReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MkDirReply::GetClassData() const { return &_class_data_; }


void MkDirReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MkDirReply*>(&to_msg);
  auto& from = static_cast<const MkDirReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:wiscAFS.MkDirReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_err() != 0) {
    _this->_internal_set_err(from._internal_err());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MkDirReply::CopyFrom(const MkDirReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wiscAFS.MkDirReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MkDirReply::IsInitialized() const {
  return true;
}

void MkDirReply::InternalSwap(MkDirReply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.err_, other->_impl_.err_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MkDirReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wiscAFS_2eproto_getter, &descriptor_table_wiscAFS_2eproto_once,
      file_level_metadata_wiscAFS_2eproto[3]);
}

// ===================================================================

class RmDirReq::_Internal {
 public:
};

RmDirReq::RmDirReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:wiscAFS.RmDirReq)
}
RmDirReq::RmDirReq(const RmDirReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RmDirReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.path_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_path().empty()) {
    _this->_impl_.path_.Set(from._internal_path(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:wiscAFS.RmDirReq)
}

inline void RmDirReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.path_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RmDirReq::~RmDirReq() {
  // @@protoc_insertion_point(destructor:wiscAFS.RmDirReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RmDirReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.path_.Destroy();
}

void RmDirReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RmDirReq::Clear() {
// @@protoc_insertion_point(message_clear_start:wiscAFS.RmDirReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RmDirReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "wiscAFS.RmDirReq.path"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RmDirReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wiscAFS.RmDirReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "wiscAFS.RmDirReq.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wiscAFS.RmDirReq)
  return target;
}

size_t RmDirReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wiscAFS.RmDirReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RmDirReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RmDirReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RmDirReq::GetClassData() const { return &_class_data_; }


void RmDirReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RmDirReq*>(&to_msg);
  auto& from = static_cast<const RmDirReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:wiscAFS.RmDirReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RmDirReq::CopyFrom(const RmDirReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wiscAFS.RmDirReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RmDirReq::IsInitialized() const {
  return true;
}

void RmDirReq::InternalSwap(RmDirReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.path_, lhs_arena,
      &other->_impl_.path_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RmDirReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wiscAFS_2eproto_getter, &descriptor_table_wiscAFS_2eproto_once,
      file_level_metadata_wiscAFS_2eproto[4]);
}

// ===================================================================

class RmDirReply::_Internal {
 public:
};

RmDirReply::RmDirReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:wiscAFS.RmDirReply)
}
RmDirReply::RmDirReply(const RmDirReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RmDirReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.err_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.err_ = from._impl_.err_;
  // @@protoc_insertion_point(copy_constructor:wiscAFS.RmDirReply)
}

inline void RmDirReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.err_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RmDirReply::~RmDirReply() {
  // @@protoc_insertion_point(destructor:wiscAFS.RmDirReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RmDirReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RmDirReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RmDirReply::Clear() {
// @@protoc_insertion_point(message_clear_start:wiscAFS.RmDirReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.err_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RmDirReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 err = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.err_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RmDirReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wiscAFS.RmDirReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 err = 1;
  if (this->_internal_err() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_err(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wiscAFS.RmDirReply)
  return target;
}

size_t RmDirReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wiscAFS.RmDirReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 err = 1;
  if (this->_internal_err() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_err());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RmDirReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RmDirReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RmDirReply::GetClassData() const { return &_class_data_; }


void RmDirReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RmDirReply*>(&to_msg);
  auto& from = static_cast<const RmDirReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:wiscAFS.RmDirReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_err() != 0) {
    _this->_internal_set_err(from._internal_err());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RmDirReply::CopyFrom(const RmDirReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wiscAFS.RmDirReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RmDirReply::IsInitialized() const {
  return true;
}

void RmDirReply::InternalSwap(RmDirReply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.err_, other->_impl_.err_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RmDirReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wiscAFS_2eproto_getter, &descriptor_table_wiscAFS_2eproto_once,
      file_level_metadata_wiscAFS_2eproto[5]);
}

// ===================================================================

class GetAttrReq::_Internal {
 public:
};

GetAttrReq::GetAttrReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:wiscAFS.GetAttrReq)
}
GetAttrReq::GetAttrReq(const GetAttrReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAttrReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.path_){}
    , decltype(_impl_.buf_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_path().empty()) {
    _this->_impl_.path_.Set(from._internal_path(), 
      _this->GetArenaForAllocation());
  }
  _impl_.buf_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.buf_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_buf().empty()) {
    _this->_impl_.buf_.Set(from._internal_buf(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:wiscAFS.GetAttrReq)
}

inline void GetAttrReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.path_){}
    , decltype(_impl_.buf_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.buf_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.buf_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetAttrReq::~GetAttrReq() {
  // @@protoc_insertion_point(destructor:wiscAFS.GetAttrReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAttrReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.path_.Destroy();
  _impl_.buf_.Destroy();
}

void GetAttrReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAttrReq::Clear() {
// @@protoc_insertion_point(message_clear_start:wiscAFS.GetAttrReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  _impl_.buf_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAttrReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "wiscAFS.GetAttrReq.path"));
        } else
          goto handle_unusual;
        continue;
      // bytes buf = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_buf();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAttrReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wiscAFS.GetAttrReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "wiscAFS.GetAttrReq.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  // bytes buf = 2;
  if (!this->_internal_buf().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_buf(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wiscAFS.GetAttrReq)
  return target;
}

size_t GetAttrReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wiscAFS.GetAttrReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // bytes buf = 2;
  if (!this->_internal_buf().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_buf());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAttrReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAttrReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAttrReq::GetClassData() const { return &_class_data_; }


void GetAttrReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAttrReq*>(&to_msg);
  auto& from = static_cast<const GetAttrReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:wiscAFS.GetAttrReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if (!from._internal_buf().empty()) {
    _this->_internal_set_buf(from._internal_buf());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAttrReq::CopyFrom(const GetAttrReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wiscAFS.GetAttrReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAttrReq::IsInitialized() const {
  return true;
}

void GetAttrReq::InternalSwap(GetAttrReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.path_, lhs_arena,
      &other->_impl_.path_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.buf_, lhs_arena,
      &other->_impl_.buf_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAttrReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wiscAFS_2eproto_getter, &descriptor_table_wiscAFS_2eproto_once,
      file_level_metadata_wiscAFS_2eproto[6]);
}

// ===================================================================

class GetAttrReply::_Internal {
 public:
};

GetAttrReply::GetAttrReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:wiscAFS.GetAttrReply)
}
GetAttrReply::GetAttrReply(const GetAttrReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAttrReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.buf_){}
    , decltype(_impl_.err_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.buf_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.buf_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_buf().empty()) {
    _this->_impl_.buf_.Set(from._internal_buf(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.err_ = from._impl_.err_;
  // @@protoc_insertion_point(copy_constructor:wiscAFS.GetAttrReply)
}

inline void GetAttrReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.buf_){}
    , decltype(_impl_.err_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.buf_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.buf_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetAttrReply::~GetAttrReply() {
  // @@protoc_insertion_point(destructor:wiscAFS.GetAttrReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAttrReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.buf_.Destroy();
}

void GetAttrReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAttrReply::Clear() {
// @@protoc_insertion_point(message_clear_start:wiscAFS.GetAttrReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.buf_.ClearToEmpty();
  _impl_.err_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAttrReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 err = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.err_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes buf = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_buf();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAttrReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wiscAFS.GetAttrReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 err = 1;
  if (this->_internal_err() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_err(), target);
  }

  // bytes buf = 2;
  if (!this->_internal_buf().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_buf(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wiscAFS.GetAttrReply)
  return target;
}

size_t GetAttrReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wiscAFS.GetAttrReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes buf = 2;
  if (!this->_internal_buf().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_buf());
  }

  // int32 err = 1;
  if (this->_internal_err() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_err());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAttrReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAttrReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAttrReply::GetClassData() const { return &_class_data_; }


void GetAttrReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAttrReply*>(&to_msg);
  auto& from = static_cast<const GetAttrReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:wiscAFS.GetAttrReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_buf().empty()) {
    _this->_internal_set_buf(from._internal_buf());
  }
  if (from._internal_err() != 0) {
    _this->_internal_set_err(from._internal_err());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAttrReply::CopyFrom(const GetAttrReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wiscAFS.GetAttrReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAttrReply::IsInitialized() const {
  return true;
}

void GetAttrReply::InternalSwap(GetAttrReply* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.buf_, lhs_arena,
      &other->_impl_.buf_, rhs_arena
  );
  swap(_impl_.err_, other->_impl_.err_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAttrReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wiscAFS_2eproto_getter, &descriptor_table_wiscAFS_2eproto_once,
      file_level_metadata_wiscAFS_2eproto[7]);
}

// ===================================================================

class OpenReq::_Internal {
 public:
};

OpenReq::OpenReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:wiscAFS.OpenReq)
}
OpenReq::OpenReq(const OpenReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OpenReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.path_){}
    , decltype(_impl_.flag_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_path().empty()) {
    _this->_impl_.path_.Set(from._internal_path(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.flag_ = from._impl_.flag_;
  // @@protoc_insertion_point(copy_constructor:wiscAFS.OpenReq)
}

inline void OpenReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.path_){}
    , decltype(_impl_.flag_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OpenReq::~OpenReq() {
  // @@protoc_insertion_point(destructor:wiscAFS.OpenReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OpenReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.path_.Destroy();
}

void OpenReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OpenReq::Clear() {
// @@protoc_insertion_point(message_clear_start:wiscAFS.OpenReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  _impl_.flag_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OpenReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "wiscAFS.OpenReq.path"));
        } else
          goto handle_unusual;
        continue;
      // int32 flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OpenReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wiscAFS.OpenReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "wiscAFS.OpenReq.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  // int32 flag = 2;
  if (this->_internal_flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wiscAFS.OpenReq)
  return target;
}

size_t OpenReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wiscAFS.OpenReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // int32 flag = 2;
  if (this->_internal_flag() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_flag());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OpenReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OpenReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OpenReq::GetClassData() const { return &_class_data_; }


void OpenReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OpenReq*>(&to_msg);
  auto& from = static_cast<const OpenReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:wiscAFS.OpenReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if (from._internal_flag() != 0) {
    _this->_internal_set_flag(from._internal_flag());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OpenReq::CopyFrom(const OpenReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wiscAFS.OpenReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenReq::IsInitialized() const {
  return true;
}

void OpenReq::InternalSwap(OpenReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.path_, lhs_arena,
      &other->_impl_.path_, rhs_arena
  );
  swap(_impl_.flag_, other->_impl_.flag_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OpenReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wiscAFS_2eproto_getter, &descriptor_table_wiscAFS_2eproto_once,
      file_level_metadata_wiscAFS_2eproto[8]);
}

// ===================================================================

class OpenReply::_Internal {
 public:
};

OpenReply::OpenReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:wiscAFS.OpenReply)
}
OpenReply::OpenReply(const OpenReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OpenReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.err_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.err_ = from._impl_.err_;
  // @@protoc_insertion_point(copy_constructor:wiscAFS.OpenReply)
}

inline void OpenReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.err_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

OpenReply::~OpenReply() {
  // @@protoc_insertion_point(destructor:wiscAFS.OpenReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OpenReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void OpenReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OpenReply::Clear() {
// @@protoc_insertion_point(message_clear_start:wiscAFS.OpenReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.err_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OpenReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 err = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.err_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OpenReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wiscAFS.OpenReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 err = 1;
  if (this->_internal_err() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_err(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wiscAFS.OpenReply)
  return target;
}

size_t OpenReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wiscAFS.OpenReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 err = 1;
  if (this->_internal_err() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_err());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OpenReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OpenReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OpenReply::GetClassData() const { return &_class_data_; }


void OpenReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OpenReply*>(&to_msg);
  auto& from = static_cast<const OpenReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:wiscAFS.OpenReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_err() != 0) {
    _this->_internal_set_err(from._internal_err());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OpenReply::CopyFrom(const OpenReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wiscAFS.OpenReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenReply::IsInitialized() const {
  return true;
}

void OpenReply::InternalSwap(OpenReply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.err_, other->_impl_.err_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OpenReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wiscAFS_2eproto_getter, &descriptor_table_wiscAFS_2eproto_once,
      file_level_metadata_wiscAFS_2eproto[9]);
}

// ===================================================================

class ReadReq::_Internal {
 public:
};

ReadReq::ReadReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:wiscAFS.ReadReq)
}
ReadReq::ReadReq(const ReadReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReadReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.path_){}
    , decltype(_impl_.size_){}
    , decltype(_impl_.offset_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_path().empty()) {
    _this->_impl_.path_.Set(from._internal_path(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.size_, &from._impl_.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.offset_) -
    reinterpret_cast<char*>(&_impl_.size_)) + sizeof(_impl_.offset_));
  // @@protoc_insertion_point(copy_constructor:wiscAFS.ReadReq)
}

inline void ReadReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.path_){}
    , decltype(_impl_.size_){0}
    , decltype(_impl_.offset_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ReadReq::~ReadReq() {
  // @@protoc_insertion_point(destructor:wiscAFS.ReadReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReadReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.path_.Destroy();
}

void ReadReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReadReq::Clear() {
// @@protoc_insertion_point(message_clear_start:wiscAFS.ReadReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  ::memset(&_impl_.size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.offset_) -
      reinterpret_cast<char*>(&_impl_.size_)) + sizeof(_impl_.offset_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "wiscAFS.ReadReq.path"));
        } else
          goto handle_unusual;
        continue;
      // int32 size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 offset = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReadReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wiscAFS.ReadReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "wiscAFS.ReadReq.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  // int32 size = 2;
  if (this->_internal_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_size(), target);
  }

  // int32 offset = 3;
  if (this->_internal_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_offset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wiscAFS.ReadReq)
  return target;
}

size_t ReadReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wiscAFS.ReadReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // int32 size = 2;
  if (this->_internal_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_size());
  }

  // int32 offset = 3;
  if (this->_internal_offset() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_offset());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReadReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReadReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReadReq::GetClassData() const { return &_class_data_; }


void ReadReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReadReq*>(&to_msg);
  auto& from = static_cast<const ReadReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:wiscAFS.ReadReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if (from._internal_size() != 0) {
    _this->_internal_set_size(from._internal_size());
  }
  if (from._internal_offset() != 0) {
    _this->_internal_set_offset(from._internal_offset());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReadReq::CopyFrom(const ReadReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wiscAFS.ReadReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadReq::IsInitialized() const {
  return true;
}

void ReadReq::InternalSwap(ReadReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.path_, lhs_arena,
      &other->_impl_.path_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReadReq, _impl_.offset_)
      + sizeof(ReadReq::_impl_.offset_)
      - PROTOBUF_FIELD_OFFSET(ReadReq, _impl_.size_)>(
          reinterpret_cast<char*>(&_impl_.size_),
          reinterpret_cast<char*>(&other->_impl_.size_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wiscAFS_2eproto_getter, &descriptor_table_wiscAFS_2eproto_once,
      file_level_metadata_wiscAFS_2eproto[10]);
}

// ===================================================================

class ReadReply::_Internal {
 public:
};

ReadReply::ReadReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:wiscAFS.ReadReply)
}
ReadReply::ReadReply(const ReadReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReadReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.buf_){}
    , decltype(_impl_.num_bytes_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.buf_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.buf_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_buf().empty()) {
    _this->_impl_.buf_.Set(from._internal_buf(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.num_bytes_ = from._impl_.num_bytes_;
  // @@protoc_insertion_point(copy_constructor:wiscAFS.ReadReply)
}

inline void ReadReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.buf_){}
    , decltype(_impl_.num_bytes_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.buf_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.buf_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ReadReply::~ReadReply() {
  // @@protoc_insertion_point(destructor:wiscAFS.ReadReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReadReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.buf_.Destroy();
}

void ReadReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReadReply::Clear() {
// @@protoc_insertion_point(message_clear_start:wiscAFS.ReadReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.buf_.ClearToEmpty();
  _impl_.num_bytes_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 num_bytes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.num_bytes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes buf = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_buf();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReadReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wiscAFS.ReadReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 num_bytes = 1;
  if (this->_internal_num_bytes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_num_bytes(), target);
  }

  // bytes buf = 2;
  if (!this->_internal_buf().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_buf(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wiscAFS.ReadReply)
  return target;
}

size_t ReadReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wiscAFS.ReadReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes buf = 2;
  if (!this->_internal_buf().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_buf());
  }

  // int32 num_bytes = 1;
  if (this->_internal_num_bytes() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num_bytes());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReadReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReadReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReadReply::GetClassData() const { return &_class_data_; }


void ReadReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReadReply*>(&to_msg);
  auto& from = static_cast<const ReadReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:wiscAFS.ReadReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_buf().empty()) {
    _this->_internal_set_buf(from._internal_buf());
  }
  if (from._internal_num_bytes() != 0) {
    _this->_internal_set_num_bytes(from._internal_num_bytes());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReadReply::CopyFrom(const ReadReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wiscAFS.ReadReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadReply::IsInitialized() const {
  return true;
}

void ReadReply::InternalSwap(ReadReply* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.buf_, lhs_arena,
      &other->_impl_.buf_, rhs_arena
  );
  swap(_impl_.num_bytes_, other->_impl_.num_bytes_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wiscAFS_2eproto_getter, &descriptor_table_wiscAFS_2eproto_once,
      file_level_metadata_wiscAFS_2eproto[11]);
}

// ===================================================================

class WriteReq::_Internal {
 public:
};

WriteReq::WriteReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:wiscAFS.WriteReq)
}
WriteReq::WriteReq(const WriteReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WriteReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.path_){}
    , decltype(_impl_.buf_){}
    , decltype(_impl_.size_){}
    , decltype(_impl_.offset_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_path().empty()) {
    _this->_impl_.path_.Set(from._internal_path(), 
      _this->GetArenaForAllocation());
  }
  _impl_.buf_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.buf_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_buf().empty()) {
    _this->_impl_.buf_.Set(from._internal_buf(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.size_, &from._impl_.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.offset_) -
    reinterpret_cast<char*>(&_impl_.size_)) + sizeof(_impl_.offset_));
  // @@protoc_insertion_point(copy_constructor:wiscAFS.WriteReq)
}

inline void WriteReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.path_){}
    , decltype(_impl_.buf_){}
    , decltype(_impl_.size_){0}
    , decltype(_impl_.offset_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.buf_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.buf_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WriteReq::~WriteReq() {
  // @@protoc_insertion_point(destructor:wiscAFS.WriteReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WriteReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.path_.Destroy();
  _impl_.buf_.Destroy();
}

void WriteReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WriteReq::Clear() {
// @@protoc_insertion_point(message_clear_start:wiscAFS.WriteReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  _impl_.buf_.ClearToEmpty();
  ::memset(&_impl_.size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.offset_) -
      reinterpret_cast<char*>(&_impl_.size_)) + sizeof(_impl_.offset_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WriteReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "wiscAFS.WriteReq.path"));
        } else
          goto handle_unusual;
        continue;
      // bytes buf = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_buf();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 offset = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WriteReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wiscAFS.WriteReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "wiscAFS.WriteReq.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  // bytes buf = 2;
  if (!this->_internal_buf().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_buf(), target);
  }

  // int32 size = 3;
  if (this->_internal_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_size(), target);
  }

  // int32 offset = 4;
  if (this->_internal_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_offset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wiscAFS.WriteReq)
  return target;
}

size_t WriteReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wiscAFS.WriteReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // bytes buf = 2;
  if (!this->_internal_buf().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_buf());
  }

  // int32 size = 3;
  if (this->_internal_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_size());
  }

  // int32 offset = 4;
  if (this->_internal_offset() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_offset());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WriteReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WriteReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WriteReq::GetClassData() const { return &_class_data_; }


void WriteReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WriteReq*>(&to_msg);
  auto& from = static_cast<const WriteReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:wiscAFS.WriteReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if (!from._internal_buf().empty()) {
    _this->_internal_set_buf(from._internal_buf());
  }
  if (from._internal_size() != 0) {
    _this->_internal_set_size(from._internal_size());
  }
  if (from._internal_offset() != 0) {
    _this->_internal_set_offset(from._internal_offset());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WriteReq::CopyFrom(const WriteReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wiscAFS.WriteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteReq::IsInitialized() const {
  return true;
}

void WriteReq::InternalSwap(WriteReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.path_, lhs_arena,
      &other->_impl_.path_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.buf_, lhs_arena,
      &other->_impl_.buf_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WriteReq, _impl_.offset_)
      + sizeof(WriteReq::_impl_.offset_)
      - PROTOBUF_FIELD_OFFSET(WriteReq, _impl_.size_)>(
          reinterpret_cast<char*>(&_impl_.size_),
          reinterpret_cast<char*>(&other->_impl_.size_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WriteReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wiscAFS_2eproto_getter, &descriptor_table_wiscAFS_2eproto_once,
      file_level_metadata_wiscAFS_2eproto[12]);
}

// ===================================================================

class WriteReply::_Internal {
 public:
};

WriteReply::WriteReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:wiscAFS.WriteReply)
}
WriteReply::WriteReply(const WriteReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WriteReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.num_bytes_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.num_bytes_ = from._impl_.num_bytes_;
  // @@protoc_insertion_point(copy_constructor:wiscAFS.WriteReply)
}

inline void WriteReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.num_bytes_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

WriteReply::~WriteReply() {
  // @@protoc_insertion_point(destructor:wiscAFS.WriteReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WriteReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void WriteReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WriteReply::Clear() {
// @@protoc_insertion_point(message_clear_start:wiscAFS.WriteReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.num_bytes_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WriteReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 num_bytes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.num_bytes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WriteReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wiscAFS.WriteReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 num_bytes = 1;
  if (this->_internal_num_bytes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_num_bytes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wiscAFS.WriteReply)
  return target;
}

size_t WriteReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wiscAFS.WriteReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 num_bytes = 1;
  if (this->_internal_num_bytes() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num_bytes());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WriteReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WriteReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WriteReply::GetClassData() const { return &_class_data_; }


void WriteReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WriteReply*>(&to_msg);
  auto& from = static_cast<const WriteReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:wiscAFS.WriteReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_num_bytes() != 0) {
    _this->_internal_set_num_bytes(from._internal_num_bytes());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WriteReply::CopyFrom(const WriteReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wiscAFS.WriteReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteReply::IsInitialized() const {
  return true;
}

void WriteReply::InternalSwap(WriteReply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.num_bytes_, other->_impl_.num_bytes_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WriteReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wiscAFS_2eproto_getter, &descriptor_table_wiscAFS_2eproto_once,
      file_level_metadata_wiscAFS_2eproto[13]);
}

// ===================================================================

class HelloRequest::_Internal {
 public:
};

HelloRequest::HelloRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:wiscAFS.HelloRequest)
}
HelloRequest::HelloRequest(const HelloRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  HelloRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:wiscAFS.HelloRequest)
}

inline void HelloRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

HelloRequest::~HelloRequest() {
  // @@protoc_insertion_point(destructor:wiscAFS.HelloRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void HelloRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void HelloRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void HelloRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:wiscAFS.HelloRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HelloRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "wiscAFS.HelloRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HelloRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wiscAFS.HelloRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "wiscAFS.HelloRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wiscAFS.HelloRequest)
  return target;
}

size_t HelloRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wiscAFS.HelloRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HelloRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    HelloRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HelloRequest::GetClassData() const { return &_class_data_; }


void HelloRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<HelloRequest*>(&to_msg);
  auto& from = static_cast<const HelloRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:wiscAFS.HelloRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HelloRequest::CopyFrom(const HelloRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wiscAFS.HelloRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloRequest::IsInitialized() const {
  return true;
}

void HelloRequest::InternalSwap(HelloRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata HelloRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wiscAFS_2eproto_getter, &descriptor_table_wiscAFS_2eproto_once,
      file_level_metadata_wiscAFS_2eproto[14]);
}

// ===================================================================

class HelloReply::_Internal {
 public:
};

HelloReply::HelloReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:wiscAFS.HelloReply)
}
HelloReply::HelloReply(const HelloReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  HelloReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:wiscAFS.HelloReply)
}

inline void HelloReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

HelloReply::~HelloReply() {
  // @@protoc_insertion_point(destructor:wiscAFS.HelloReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void HelloReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
}

void HelloReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void HelloReply::Clear() {
// @@protoc_insertion_point(message_clear_start:wiscAFS.HelloReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HelloReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "wiscAFS.HelloReply.message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HelloReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wiscAFS.HelloReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "wiscAFS.HelloReply.message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wiscAFS.HelloReply)
  return target;
}

size_t HelloReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wiscAFS.HelloReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HelloReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    HelloReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HelloReply::GetClassData() const { return &_class_data_; }


void HelloReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<HelloReply*>(&to_msg);
  auto& from = static_cast<const HelloReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:wiscAFS.HelloReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HelloReply::CopyFrom(const HelloReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wiscAFS.HelloReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloReply::IsInitialized() const {
  return true;
}

void HelloReply::InternalSwap(HelloReply* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata HelloReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wiscAFS_2eproto_getter, &descriptor_table_wiscAFS_2eproto_once,
      file_level_metadata_wiscAFS_2eproto[15]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace wiscAFS
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::wiscAFS::ReadDirReq*
Arena::CreateMaybeMessage< ::wiscAFS::ReadDirReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wiscAFS::ReadDirReq >(arena);
}
template<> PROTOBUF_NOINLINE ::wiscAFS::ReadDirReply*
Arena::CreateMaybeMessage< ::wiscAFS::ReadDirReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wiscAFS::ReadDirReply >(arena);
}
template<> PROTOBUF_NOINLINE ::wiscAFS::MkDirReq*
Arena::CreateMaybeMessage< ::wiscAFS::MkDirReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wiscAFS::MkDirReq >(arena);
}
template<> PROTOBUF_NOINLINE ::wiscAFS::MkDirReply*
Arena::CreateMaybeMessage< ::wiscAFS::MkDirReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wiscAFS::MkDirReply >(arena);
}
template<> PROTOBUF_NOINLINE ::wiscAFS::RmDirReq*
Arena::CreateMaybeMessage< ::wiscAFS::RmDirReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wiscAFS::RmDirReq >(arena);
}
template<> PROTOBUF_NOINLINE ::wiscAFS::RmDirReply*
Arena::CreateMaybeMessage< ::wiscAFS::RmDirReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wiscAFS::RmDirReply >(arena);
}
template<> PROTOBUF_NOINLINE ::wiscAFS::GetAttrReq*
Arena::CreateMaybeMessage< ::wiscAFS::GetAttrReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wiscAFS::GetAttrReq >(arena);
}
template<> PROTOBUF_NOINLINE ::wiscAFS::GetAttrReply*
Arena::CreateMaybeMessage< ::wiscAFS::GetAttrReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wiscAFS::GetAttrReply >(arena);
}
template<> PROTOBUF_NOINLINE ::wiscAFS::OpenReq*
Arena::CreateMaybeMessage< ::wiscAFS::OpenReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wiscAFS::OpenReq >(arena);
}
template<> PROTOBUF_NOINLINE ::wiscAFS::OpenReply*
Arena::CreateMaybeMessage< ::wiscAFS::OpenReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wiscAFS::OpenReply >(arena);
}
template<> PROTOBUF_NOINLINE ::wiscAFS::ReadReq*
Arena::CreateMaybeMessage< ::wiscAFS::ReadReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wiscAFS::ReadReq >(arena);
}
template<> PROTOBUF_NOINLINE ::wiscAFS::ReadReply*
Arena::CreateMaybeMessage< ::wiscAFS::ReadReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wiscAFS::ReadReply >(arena);
}
template<> PROTOBUF_NOINLINE ::wiscAFS::WriteReq*
Arena::CreateMaybeMessage< ::wiscAFS::WriteReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wiscAFS::WriteReq >(arena);
}
template<> PROTOBUF_NOINLINE ::wiscAFS::WriteReply*
Arena::CreateMaybeMessage< ::wiscAFS::WriteReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wiscAFS::WriteReply >(arena);
}
template<> PROTOBUF_NOINLINE ::wiscAFS::HelloRequest*
Arena::CreateMaybeMessage< ::wiscAFS::HelloRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wiscAFS::HelloRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::wiscAFS::HelloReply*
Arena::CreateMaybeMessage< ::wiscAFS::HelloReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wiscAFS::HelloReply >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
