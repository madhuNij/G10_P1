// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: wiscAFS.proto
#ifndef GRPC_wiscAFS_2eproto__INCLUDED
#define GRPC_wiscAFS_2eproto__INCLUDED

#include "wiscAFS.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace wiscAFS {

// The greeting service definition.
class WiscAFS final {
 public:
  static constexpr char const* service_full_name() {
    return "wiscAFS.WiscAFS";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status GetAttr(::grpc::ClientContext* context, const ::wiscAFS::GetAttrReq& request, ::wiscAFS::GetAttrReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::GetAttrReply>> AsyncGetAttr(::grpc::ClientContext* context, const ::wiscAFS::GetAttrReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::GetAttrReply>>(AsyncGetAttrRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::GetAttrReply>> PrepareAsyncGetAttr(::grpc::ClientContext* context, const ::wiscAFS::GetAttrReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::GetAttrReply>>(PrepareAsyncGetAttrRaw(context, request, cq));
    }
    virtual ::grpc::Status Open(::grpc::ClientContext* context, const ::wiscAFS::OpenReq& request, ::wiscAFS::OpenReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::OpenReply>> AsyncOpen(::grpc::ClientContext* context, const ::wiscAFS::OpenReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::OpenReply>>(AsyncOpenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::OpenReply>> PrepareAsyncOpen(::grpc::ClientContext* context, const ::wiscAFS::OpenReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::OpenReply>>(PrepareAsyncOpenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::wiscAFS::ReadReply>> Read(::grpc::ClientContext* context, const ::wiscAFS::ReadReq& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::wiscAFS::ReadReply>>(ReadRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::wiscAFS::ReadReply>> AsyncRead(::grpc::ClientContext* context, const ::wiscAFS::ReadReq& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::wiscAFS::ReadReply>>(AsyncReadRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::wiscAFS::ReadReply>> PrepareAsyncRead(::grpc::ClientContext* context, const ::wiscAFS::ReadReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::wiscAFS::ReadReply>>(PrepareAsyncReadRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientWriterInterface< ::wiscAFS::WriteReq>> Write(::grpc::ClientContext* context, ::wiscAFS::WriteReply* response) {
      return std::unique_ptr< ::grpc::ClientWriterInterface< ::wiscAFS::WriteReq>>(WriteRaw(context, response));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::wiscAFS::WriteReq>> AsyncWrite(::grpc::ClientContext* context, ::wiscAFS::WriteReply* response, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::wiscAFS::WriteReq>>(AsyncWriteRaw(context, response, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::wiscAFS::WriteReq>> PrepareAsyncWrite(::grpc::ClientContext* context, ::wiscAFS::WriteReply* response, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::wiscAFS::WriteReq>>(PrepareAsyncWriteRaw(context, response, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::wiscAFS::ReadDirReply>> ReadDir(::grpc::ClientContext* context, const ::wiscAFS::ReadDirReq& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::wiscAFS::ReadDirReply>>(ReadDirRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::wiscAFS::ReadDirReply>> AsyncReadDir(::grpc::ClientContext* context, const ::wiscAFS::ReadDirReq& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::wiscAFS::ReadDirReply>>(AsyncReadDirRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::wiscAFS::ReadDirReply>> PrepareAsyncReadDir(::grpc::ClientContext* context, const ::wiscAFS::ReadDirReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::wiscAFS::ReadDirReply>>(PrepareAsyncReadDirRaw(context, request, cq));
    }
    virtual ::grpc::Status MkDir(::grpc::ClientContext* context, const ::wiscAFS::MkDirReq& request, ::wiscAFS::MkDirReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::MkDirReply>> AsyncMkDir(::grpc::ClientContext* context, const ::wiscAFS::MkDirReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::MkDirReply>>(AsyncMkDirRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::MkDirReply>> PrepareAsyncMkDir(::grpc::ClientContext* context, const ::wiscAFS::MkDirReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::MkDirReply>>(PrepareAsyncMkDirRaw(context, request, cq));
    }
    virtual ::grpc::Status RmDir(::grpc::ClientContext* context, const ::wiscAFS::RmDirReq& request, ::wiscAFS::RmDirReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::RmDirReply>> AsyncRmDir(::grpc::ClientContext* context, const ::wiscAFS::RmDirReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::RmDirReply>>(AsyncRmDirRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::RmDirReply>> PrepareAsyncRmDir(::grpc::ClientContext* context, const ::wiscAFS::RmDirReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::RmDirReply>>(PrepareAsyncRmDirRaw(context, request, cq));
    }
    virtual ::grpc::Status SayHello(::grpc::ClientContext* context, const ::wiscAFS::HelloRequest& request, ::wiscAFS::HelloReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::HelloReply>> AsyncSayHello(::grpc::ClientContext* context, const ::wiscAFS::HelloRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::HelloReply>>(AsyncSayHelloRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::HelloReply>> PrepareAsyncSayHello(::grpc::ClientContext* context, const ::wiscAFS::HelloRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::HelloReply>>(PrepareAsyncSayHelloRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void GetAttr(::grpc::ClientContext* context, const ::wiscAFS::GetAttrReq* request, ::wiscAFS::GetAttrReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAttr(::grpc::ClientContext* context, const ::wiscAFS::GetAttrReq* request, ::wiscAFS::GetAttrReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Open(::grpc::ClientContext* context, const ::wiscAFS::OpenReq* request, ::wiscAFS::OpenReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Open(::grpc::ClientContext* context, const ::wiscAFS::OpenReq* request, ::wiscAFS::OpenReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Read(::grpc::ClientContext* context, const ::wiscAFS::ReadReq* request, ::grpc::ClientReadReactor< ::wiscAFS::ReadReply>* reactor) = 0;
      virtual void Write(::grpc::ClientContext* context, ::wiscAFS::WriteReply* response, ::grpc::ClientWriteReactor< ::wiscAFS::WriteReq>* reactor) = 0;
      virtual void ReadDir(::grpc::ClientContext* context, const ::wiscAFS::ReadDirReq* request, ::grpc::ClientReadReactor< ::wiscAFS::ReadDirReply>* reactor) = 0;
      virtual void MkDir(::grpc::ClientContext* context, const ::wiscAFS::MkDirReq* request, ::wiscAFS::MkDirReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void MkDir(::grpc::ClientContext* context, const ::wiscAFS::MkDirReq* request, ::wiscAFS::MkDirReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void RmDir(::grpc::ClientContext* context, const ::wiscAFS::RmDirReq* request, ::wiscAFS::RmDirReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RmDir(::grpc::ClientContext* context, const ::wiscAFS::RmDirReq* request, ::wiscAFS::RmDirReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SayHello(::grpc::ClientContext* context, const ::wiscAFS::HelloRequest* request, ::wiscAFS::HelloReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SayHello(::grpc::ClientContext* context, const ::wiscAFS::HelloRequest* request, ::wiscAFS::HelloReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::GetAttrReply>* AsyncGetAttrRaw(::grpc::ClientContext* context, const ::wiscAFS::GetAttrReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::GetAttrReply>* PrepareAsyncGetAttrRaw(::grpc::ClientContext* context, const ::wiscAFS::GetAttrReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::OpenReply>* AsyncOpenRaw(::grpc::ClientContext* context, const ::wiscAFS::OpenReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::OpenReply>* PrepareAsyncOpenRaw(::grpc::ClientContext* context, const ::wiscAFS::OpenReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::wiscAFS::ReadReply>* ReadRaw(::grpc::ClientContext* context, const ::wiscAFS::ReadReq& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::wiscAFS::ReadReply>* AsyncReadRaw(::grpc::ClientContext* context, const ::wiscAFS::ReadReq& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::wiscAFS::ReadReply>* PrepareAsyncReadRaw(::grpc::ClientContext* context, const ::wiscAFS::ReadReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientWriterInterface< ::wiscAFS::WriteReq>* WriteRaw(::grpc::ClientContext* context, ::wiscAFS::WriteReply* response) = 0;
    virtual ::grpc::ClientAsyncWriterInterface< ::wiscAFS::WriteReq>* AsyncWriteRaw(::grpc::ClientContext* context, ::wiscAFS::WriteReply* response, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncWriterInterface< ::wiscAFS::WriteReq>* PrepareAsyncWriteRaw(::grpc::ClientContext* context, ::wiscAFS::WriteReply* response, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::wiscAFS::ReadDirReply>* ReadDirRaw(::grpc::ClientContext* context, const ::wiscAFS::ReadDirReq& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::wiscAFS::ReadDirReply>* AsyncReadDirRaw(::grpc::ClientContext* context, const ::wiscAFS::ReadDirReq& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::wiscAFS::ReadDirReply>* PrepareAsyncReadDirRaw(::grpc::ClientContext* context, const ::wiscAFS::ReadDirReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::MkDirReply>* AsyncMkDirRaw(::grpc::ClientContext* context, const ::wiscAFS::MkDirReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::MkDirReply>* PrepareAsyncMkDirRaw(::grpc::ClientContext* context, const ::wiscAFS::MkDirReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::RmDirReply>* AsyncRmDirRaw(::grpc::ClientContext* context, const ::wiscAFS::RmDirReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::RmDirReply>* PrepareAsyncRmDirRaw(::grpc::ClientContext* context, const ::wiscAFS::RmDirReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::HelloReply>* AsyncSayHelloRaw(::grpc::ClientContext* context, const ::wiscAFS::HelloRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::wiscAFS::HelloReply>* PrepareAsyncSayHelloRaw(::grpc::ClientContext* context, const ::wiscAFS::HelloRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status GetAttr(::grpc::ClientContext* context, const ::wiscAFS::GetAttrReq& request, ::wiscAFS::GetAttrReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wiscAFS::GetAttrReply>> AsyncGetAttr(::grpc::ClientContext* context, const ::wiscAFS::GetAttrReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wiscAFS::GetAttrReply>>(AsyncGetAttrRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wiscAFS::GetAttrReply>> PrepareAsyncGetAttr(::grpc::ClientContext* context, const ::wiscAFS::GetAttrReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wiscAFS::GetAttrReply>>(PrepareAsyncGetAttrRaw(context, request, cq));
    }
    ::grpc::Status Open(::grpc::ClientContext* context, const ::wiscAFS::OpenReq& request, ::wiscAFS::OpenReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wiscAFS::OpenReply>> AsyncOpen(::grpc::ClientContext* context, const ::wiscAFS::OpenReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wiscAFS::OpenReply>>(AsyncOpenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wiscAFS::OpenReply>> PrepareAsyncOpen(::grpc::ClientContext* context, const ::wiscAFS::OpenReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wiscAFS::OpenReply>>(PrepareAsyncOpenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::wiscAFS::ReadReply>> Read(::grpc::ClientContext* context, const ::wiscAFS::ReadReq& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::wiscAFS::ReadReply>>(ReadRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::wiscAFS::ReadReply>> AsyncRead(::grpc::ClientContext* context, const ::wiscAFS::ReadReq& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::wiscAFS::ReadReply>>(AsyncReadRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::wiscAFS::ReadReply>> PrepareAsyncRead(::grpc::ClientContext* context, const ::wiscAFS::ReadReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::wiscAFS::ReadReply>>(PrepareAsyncReadRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientWriter< ::wiscAFS::WriteReq>> Write(::grpc::ClientContext* context, ::wiscAFS::WriteReply* response) {
      return std::unique_ptr< ::grpc::ClientWriter< ::wiscAFS::WriteReq>>(WriteRaw(context, response));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriter< ::wiscAFS::WriteReq>> AsyncWrite(::grpc::ClientContext* context, ::wiscAFS::WriteReply* response, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncWriter< ::wiscAFS::WriteReq>>(AsyncWriteRaw(context, response, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriter< ::wiscAFS::WriteReq>> PrepareAsyncWrite(::grpc::ClientContext* context, ::wiscAFS::WriteReply* response, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncWriter< ::wiscAFS::WriteReq>>(PrepareAsyncWriteRaw(context, response, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::wiscAFS::ReadDirReply>> ReadDir(::grpc::ClientContext* context, const ::wiscAFS::ReadDirReq& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::wiscAFS::ReadDirReply>>(ReadDirRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::wiscAFS::ReadDirReply>> AsyncReadDir(::grpc::ClientContext* context, const ::wiscAFS::ReadDirReq& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::wiscAFS::ReadDirReply>>(AsyncReadDirRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::wiscAFS::ReadDirReply>> PrepareAsyncReadDir(::grpc::ClientContext* context, const ::wiscAFS::ReadDirReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::wiscAFS::ReadDirReply>>(PrepareAsyncReadDirRaw(context, request, cq));
    }
    ::grpc::Status MkDir(::grpc::ClientContext* context, const ::wiscAFS::MkDirReq& request, ::wiscAFS::MkDirReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wiscAFS::MkDirReply>> AsyncMkDir(::grpc::ClientContext* context, const ::wiscAFS::MkDirReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wiscAFS::MkDirReply>>(AsyncMkDirRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wiscAFS::MkDirReply>> PrepareAsyncMkDir(::grpc::ClientContext* context, const ::wiscAFS::MkDirReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wiscAFS::MkDirReply>>(PrepareAsyncMkDirRaw(context, request, cq));
    }
    ::grpc::Status RmDir(::grpc::ClientContext* context, const ::wiscAFS::RmDirReq& request, ::wiscAFS::RmDirReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wiscAFS::RmDirReply>> AsyncRmDir(::grpc::ClientContext* context, const ::wiscAFS::RmDirReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wiscAFS::RmDirReply>>(AsyncRmDirRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wiscAFS::RmDirReply>> PrepareAsyncRmDir(::grpc::ClientContext* context, const ::wiscAFS::RmDirReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wiscAFS::RmDirReply>>(PrepareAsyncRmDirRaw(context, request, cq));
    }
    ::grpc::Status SayHello(::grpc::ClientContext* context, const ::wiscAFS::HelloRequest& request, ::wiscAFS::HelloReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wiscAFS::HelloReply>> AsyncSayHello(::grpc::ClientContext* context, const ::wiscAFS::HelloRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wiscAFS::HelloReply>>(AsyncSayHelloRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wiscAFS::HelloReply>> PrepareAsyncSayHello(::grpc::ClientContext* context, const ::wiscAFS::HelloRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wiscAFS::HelloReply>>(PrepareAsyncSayHelloRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void GetAttr(::grpc::ClientContext* context, const ::wiscAFS::GetAttrReq* request, ::wiscAFS::GetAttrReply* response, std::function<void(::grpc::Status)>) override;
      void GetAttr(::grpc::ClientContext* context, const ::wiscAFS::GetAttrReq* request, ::wiscAFS::GetAttrReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Open(::grpc::ClientContext* context, const ::wiscAFS::OpenReq* request, ::wiscAFS::OpenReply* response, std::function<void(::grpc::Status)>) override;
      void Open(::grpc::ClientContext* context, const ::wiscAFS::OpenReq* request, ::wiscAFS::OpenReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Read(::grpc::ClientContext* context, const ::wiscAFS::ReadReq* request, ::grpc::ClientReadReactor< ::wiscAFS::ReadReply>* reactor) override;
      void Write(::grpc::ClientContext* context, ::wiscAFS::WriteReply* response, ::grpc::ClientWriteReactor< ::wiscAFS::WriteReq>* reactor) override;
      void ReadDir(::grpc::ClientContext* context, const ::wiscAFS::ReadDirReq* request, ::grpc::ClientReadReactor< ::wiscAFS::ReadDirReply>* reactor) override;
      void MkDir(::grpc::ClientContext* context, const ::wiscAFS::MkDirReq* request, ::wiscAFS::MkDirReply* response, std::function<void(::grpc::Status)>) override;
      void MkDir(::grpc::ClientContext* context, const ::wiscAFS::MkDirReq* request, ::wiscAFS::MkDirReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RmDir(::grpc::ClientContext* context, const ::wiscAFS::RmDirReq* request, ::wiscAFS::RmDirReply* response, std::function<void(::grpc::Status)>) override;
      void RmDir(::grpc::ClientContext* context, const ::wiscAFS::RmDirReq* request, ::wiscAFS::RmDirReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SayHello(::grpc::ClientContext* context, const ::wiscAFS::HelloRequest* request, ::wiscAFS::HelloReply* response, std::function<void(::grpc::Status)>) override;
      void SayHello(::grpc::ClientContext* context, const ::wiscAFS::HelloRequest* request, ::wiscAFS::HelloReply* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::wiscAFS::GetAttrReply>* AsyncGetAttrRaw(::grpc::ClientContext* context, const ::wiscAFS::GetAttrReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::wiscAFS::GetAttrReply>* PrepareAsyncGetAttrRaw(::grpc::ClientContext* context, const ::wiscAFS::GetAttrReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::wiscAFS::OpenReply>* AsyncOpenRaw(::grpc::ClientContext* context, const ::wiscAFS::OpenReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::wiscAFS::OpenReply>* PrepareAsyncOpenRaw(::grpc::ClientContext* context, const ::wiscAFS::OpenReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::wiscAFS::ReadReply>* ReadRaw(::grpc::ClientContext* context, const ::wiscAFS::ReadReq& request) override;
    ::grpc::ClientAsyncReader< ::wiscAFS::ReadReply>* AsyncReadRaw(::grpc::ClientContext* context, const ::wiscAFS::ReadReq& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::wiscAFS::ReadReply>* PrepareAsyncReadRaw(::grpc::ClientContext* context, const ::wiscAFS::ReadReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientWriter< ::wiscAFS::WriteReq>* WriteRaw(::grpc::ClientContext* context, ::wiscAFS::WriteReply* response) override;
    ::grpc::ClientAsyncWriter< ::wiscAFS::WriteReq>* AsyncWriteRaw(::grpc::ClientContext* context, ::wiscAFS::WriteReply* response, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncWriter< ::wiscAFS::WriteReq>* PrepareAsyncWriteRaw(::grpc::ClientContext* context, ::wiscAFS::WriteReply* response, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::wiscAFS::ReadDirReply>* ReadDirRaw(::grpc::ClientContext* context, const ::wiscAFS::ReadDirReq& request) override;
    ::grpc::ClientAsyncReader< ::wiscAFS::ReadDirReply>* AsyncReadDirRaw(::grpc::ClientContext* context, const ::wiscAFS::ReadDirReq& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::wiscAFS::ReadDirReply>* PrepareAsyncReadDirRaw(::grpc::ClientContext* context, const ::wiscAFS::ReadDirReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::wiscAFS::MkDirReply>* AsyncMkDirRaw(::grpc::ClientContext* context, const ::wiscAFS::MkDirReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::wiscAFS::MkDirReply>* PrepareAsyncMkDirRaw(::grpc::ClientContext* context, const ::wiscAFS::MkDirReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::wiscAFS::RmDirReply>* AsyncRmDirRaw(::grpc::ClientContext* context, const ::wiscAFS::RmDirReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::wiscAFS::RmDirReply>* PrepareAsyncRmDirRaw(::grpc::ClientContext* context, const ::wiscAFS::RmDirReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::wiscAFS::HelloReply>* AsyncSayHelloRaw(::grpc::ClientContext* context, const ::wiscAFS::HelloRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::wiscAFS::HelloReply>* PrepareAsyncSayHelloRaw(::grpc::ClientContext* context, const ::wiscAFS::HelloRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetAttr_;
    const ::grpc::internal::RpcMethod rpcmethod_Open_;
    const ::grpc::internal::RpcMethod rpcmethod_Read_;
    const ::grpc::internal::RpcMethod rpcmethod_Write_;
    const ::grpc::internal::RpcMethod rpcmethod_ReadDir_;
    const ::grpc::internal::RpcMethod rpcmethod_MkDir_;
    const ::grpc::internal::RpcMethod rpcmethod_RmDir_;
    const ::grpc::internal::RpcMethod rpcmethod_SayHello_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status GetAttr(::grpc::ServerContext* context, const ::wiscAFS::GetAttrReq* request, ::wiscAFS::GetAttrReply* response);
    virtual ::grpc::Status Open(::grpc::ServerContext* context, const ::wiscAFS::OpenReq* request, ::wiscAFS::OpenReply* response);
    virtual ::grpc::Status Read(::grpc::ServerContext* context, const ::wiscAFS::ReadReq* request, ::grpc::ServerWriter< ::wiscAFS::ReadReply>* writer);
    virtual ::grpc::Status Write(::grpc::ServerContext* context, ::grpc::ServerReader< ::wiscAFS::WriteReq>* reader, ::wiscAFS::WriteReply* response);
    virtual ::grpc::Status ReadDir(::grpc::ServerContext* context, const ::wiscAFS::ReadDirReq* request, ::grpc::ServerWriter< ::wiscAFS::ReadDirReply>* writer);
    virtual ::grpc::Status MkDir(::grpc::ServerContext* context, const ::wiscAFS::MkDirReq* request, ::wiscAFS::MkDirReply* response);
    virtual ::grpc::Status RmDir(::grpc::ServerContext* context, const ::wiscAFS::RmDirReq* request, ::wiscAFS::RmDirReply* response);
    virtual ::grpc::Status SayHello(::grpc::ServerContext* context, const ::wiscAFS::HelloRequest* request, ::wiscAFS::HelloReply* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAttr() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAttr(::grpc::ServerContext* /*context*/, const ::wiscAFS::GetAttrReq* /*request*/, ::wiscAFS::GetAttrReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAttr(::grpc::ServerContext* context, ::wiscAFS::GetAttrReq* request, ::grpc::ServerAsyncResponseWriter< ::wiscAFS::GetAttrReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Open : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Open() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_Open() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Open(::grpc::ServerContext* /*context*/, const ::wiscAFS::OpenReq* /*request*/, ::wiscAFS::OpenReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOpen(::grpc::ServerContext* context, ::wiscAFS::OpenReq* request, ::grpc::ServerAsyncResponseWriter< ::wiscAFS::OpenReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Read : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Read() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_Read() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Read(::grpc::ServerContext* /*context*/, const ::wiscAFS::ReadReq* /*request*/, ::grpc::ServerWriter< ::wiscAFS::ReadReply>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRead(::grpc::ServerContext* context, ::wiscAFS::ReadReq* request, ::grpc::ServerAsyncWriter< ::wiscAFS::ReadReply>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(2, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Write : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Write() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_Write() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Write(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::wiscAFS::WriteReq>* /*reader*/, ::wiscAFS::WriteReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWrite(::grpc::ServerContext* context, ::grpc::ServerAsyncReader< ::wiscAFS::WriteReply, ::wiscAFS::WriteReq>* reader, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncClientStreaming(3, context, reader, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ReadDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ReadDir() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_ReadDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadDir(::grpc::ServerContext* /*context*/, const ::wiscAFS::ReadDirReq* /*request*/, ::grpc::ServerWriter< ::wiscAFS::ReadDirReply>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReadDir(::grpc::ServerContext* context, ::wiscAFS::ReadDirReq* request, ::grpc::ServerAsyncWriter< ::wiscAFS::ReadDirReply>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(4, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_MkDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_MkDir() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_MkDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MkDir(::grpc::ServerContext* /*context*/, const ::wiscAFS::MkDirReq* /*request*/, ::wiscAFS::MkDirReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMkDir(::grpc::ServerContext* context, ::wiscAFS::MkDirReq* request, ::grpc::ServerAsyncResponseWriter< ::wiscAFS::MkDirReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RmDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RmDir() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_RmDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RmDir(::grpc::ServerContext* /*context*/, const ::wiscAFS::RmDirReq* /*request*/, ::wiscAFS::RmDirReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRmDir(::grpc::ServerContext* context, ::wiscAFS::RmDirReq* request, ::grpc::ServerAsyncResponseWriter< ::wiscAFS::RmDirReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SayHello : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SayHello() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_SayHello() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SayHello(::grpc::ServerContext* /*context*/, const ::wiscAFS::HelloRequest* /*request*/, ::wiscAFS::HelloReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSayHello(::grpc::ServerContext* context, ::wiscAFS::HelloRequest* request, ::grpc::ServerAsyncResponseWriter< ::wiscAFS::HelloReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetAttr<WithAsyncMethod_Open<WithAsyncMethod_Read<WithAsyncMethod_Write<WithAsyncMethod_ReadDir<WithAsyncMethod_MkDir<WithAsyncMethod_RmDir<WithAsyncMethod_SayHello<Service > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_GetAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAttr() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::wiscAFS::GetAttrReq, ::wiscAFS::GetAttrReply>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::wiscAFS::GetAttrReq* request, ::wiscAFS::GetAttrReply* response) { return this->GetAttr(context, request, response); }));}
    void SetMessageAllocatorFor_GetAttr(
        ::grpc::MessageAllocator< ::wiscAFS::GetAttrReq, ::wiscAFS::GetAttrReply>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::wiscAFS::GetAttrReq, ::wiscAFS::GetAttrReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAttr(::grpc::ServerContext* /*context*/, const ::wiscAFS::GetAttrReq* /*request*/, ::wiscAFS::GetAttrReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAttr(
      ::grpc::CallbackServerContext* /*context*/, const ::wiscAFS::GetAttrReq* /*request*/, ::wiscAFS::GetAttrReply* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Open : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Open() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::wiscAFS::OpenReq, ::wiscAFS::OpenReply>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::wiscAFS::OpenReq* request, ::wiscAFS::OpenReply* response) { return this->Open(context, request, response); }));}
    void SetMessageAllocatorFor_Open(
        ::grpc::MessageAllocator< ::wiscAFS::OpenReq, ::wiscAFS::OpenReply>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::wiscAFS::OpenReq, ::wiscAFS::OpenReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Open() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Open(::grpc::ServerContext* /*context*/, const ::wiscAFS::OpenReq* /*request*/, ::wiscAFS::OpenReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Open(
      ::grpc::CallbackServerContext* /*context*/, const ::wiscAFS::OpenReq* /*request*/, ::wiscAFS::OpenReply* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Read : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Read() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackServerStreamingHandler< ::wiscAFS::ReadReq, ::wiscAFS::ReadReply>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::wiscAFS::ReadReq* request) { return this->Read(context, request); }));
    }
    ~WithCallbackMethod_Read() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Read(::grpc::ServerContext* /*context*/, const ::wiscAFS::ReadReq* /*request*/, ::grpc::ServerWriter< ::wiscAFS::ReadReply>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::wiscAFS::ReadReply>* Read(
      ::grpc::CallbackServerContext* /*context*/, const ::wiscAFS::ReadReq* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Write : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Write() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackClientStreamingHandler< ::wiscAFS::WriteReq, ::wiscAFS::WriteReply>(
            [this](
                   ::grpc::CallbackServerContext* context, ::wiscAFS::WriteReply* response) { return this->Write(context, response); }));
    }
    ~WithCallbackMethod_Write() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Write(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::wiscAFS::WriteReq>* /*reader*/, ::wiscAFS::WriteReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerReadReactor< ::wiscAFS::WriteReq>* Write(
      ::grpc::CallbackServerContext* /*context*/, ::wiscAFS::WriteReply* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ReadDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ReadDir() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackServerStreamingHandler< ::wiscAFS::ReadDirReq, ::wiscAFS::ReadDirReply>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::wiscAFS::ReadDirReq* request) { return this->ReadDir(context, request); }));
    }
    ~WithCallbackMethod_ReadDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadDir(::grpc::ServerContext* /*context*/, const ::wiscAFS::ReadDirReq* /*request*/, ::grpc::ServerWriter< ::wiscAFS::ReadDirReply>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::wiscAFS::ReadDirReply>* ReadDir(
      ::grpc::CallbackServerContext* /*context*/, const ::wiscAFS::ReadDirReq* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_MkDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_MkDir() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::wiscAFS::MkDirReq, ::wiscAFS::MkDirReply>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::wiscAFS::MkDirReq* request, ::wiscAFS::MkDirReply* response) { return this->MkDir(context, request, response); }));}
    void SetMessageAllocatorFor_MkDir(
        ::grpc::MessageAllocator< ::wiscAFS::MkDirReq, ::wiscAFS::MkDirReply>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::wiscAFS::MkDirReq, ::wiscAFS::MkDirReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_MkDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MkDir(::grpc::ServerContext* /*context*/, const ::wiscAFS::MkDirReq* /*request*/, ::wiscAFS::MkDirReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* MkDir(
      ::grpc::CallbackServerContext* /*context*/, const ::wiscAFS::MkDirReq* /*request*/, ::wiscAFS::MkDirReply* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RmDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RmDir() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::wiscAFS::RmDirReq, ::wiscAFS::RmDirReply>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::wiscAFS::RmDirReq* request, ::wiscAFS::RmDirReply* response) { return this->RmDir(context, request, response); }));}
    void SetMessageAllocatorFor_RmDir(
        ::grpc::MessageAllocator< ::wiscAFS::RmDirReq, ::wiscAFS::RmDirReply>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::wiscAFS::RmDirReq, ::wiscAFS::RmDirReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RmDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RmDir(::grpc::ServerContext* /*context*/, const ::wiscAFS::RmDirReq* /*request*/, ::wiscAFS::RmDirReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RmDir(
      ::grpc::CallbackServerContext* /*context*/, const ::wiscAFS::RmDirReq* /*request*/, ::wiscAFS::RmDirReply* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SayHello : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SayHello() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::wiscAFS::HelloRequest, ::wiscAFS::HelloReply>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::wiscAFS::HelloRequest* request, ::wiscAFS::HelloReply* response) { return this->SayHello(context, request, response); }));}
    void SetMessageAllocatorFor_SayHello(
        ::grpc::MessageAllocator< ::wiscAFS::HelloRequest, ::wiscAFS::HelloReply>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::wiscAFS::HelloRequest, ::wiscAFS::HelloReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SayHello() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SayHello(::grpc::ServerContext* /*context*/, const ::wiscAFS::HelloRequest* /*request*/, ::wiscAFS::HelloReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SayHello(
      ::grpc::CallbackServerContext* /*context*/, const ::wiscAFS::HelloRequest* /*request*/, ::wiscAFS::HelloReply* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_GetAttr<WithCallbackMethod_Open<WithCallbackMethod_Read<WithCallbackMethod_Write<WithCallbackMethod_ReadDir<WithCallbackMethod_MkDir<WithCallbackMethod_RmDir<WithCallbackMethod_SayHello<Service > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GetAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAttr() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAttr(::grpc::ServerContext* /*context*/, const ::wiscAFS::GetAttrReq* /*request*/, ::wiscAFS::GetAttrReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Open : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Open() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_Open() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Open(::grpc::ServerContext* /*context*/, const ::wiscAFS::OpenReq* /*request*/, ::wiscAFS::OpenReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Read : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Read() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_Read() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Read(::grpc::ServerContext* /*context*/, const ::wiscAFS::ReadReq* /*request*/, ::grpc::ServerWriter< ::wiscAFS::ReadReply>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Write : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Write() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_Write() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Write(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::wiscAFS::WriteReq>* /*reader*/, ::wiscAFS::WriteReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ReadDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ReadDir() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_ReadDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadDir(::grpc::ServerContext* /*context*/, const ::wiscAFS::ReadDirReq* /*request*/, ::grpc::ServerWriter< ::wiscAFS::ReadDirReply>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_MkDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_MkDir() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_MkDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MkDir(::grpc::ServerContext* /*context*/, const ::wiscAFS::MkDirReq* /*request*/, ::wiscAFS::MkDirReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RmDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RmDir() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_RmDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RmDir(::grpc::ServerContext* /*context*/, const ::wiscAFS::RmDirReq* /*request*/, ::wiscAFS::RmDirReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SayHello : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SayHello() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_SayHello() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SayHello(::grpc::ServerContext* /*context*/, const ::wiscAFS::HelloRequest* /*request*/, ::wiscAFS::HelloReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAttr() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAttr(::grpc::ServerContext* /*context*/, const ::wiscAFS::GetAttrReq* /*request*/, ::wiscAFS::GetAttrReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAttr(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Open : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Open() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_Open() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Open(::grpc::ServerContext* /*context*/, const ::wiscAFS::OpenReq* /*request*/, ::wiscAFS::OpenReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOpen(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Read : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Read() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_Read() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Read(::grpc::ServerContext* /*context*/, const ::wiscAFS::ReadReq* /*request*/, ::grpc::ServerWriter< ::wiscAFS::ReadReply>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRead(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(2, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Write : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Write() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_Write() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Write(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::wiscAFS::WriteReq>* /*reader*/, ::wiscAFS::WriteReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWrite(::grpc::ServerContext* context, ::grpc::ServerAsyncReader< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* reader, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncClientStreaming(3, context, reader, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ReadDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ReadDir() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_ReadDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadDir(::grpc::ServerContext* /*context*/, const ::wiscAFS::ReadDirReq* /*request*/, ::grpc::ServerWriter< ::wiscAFS::ReadDirReply>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReadDir(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(4, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_MkDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_MkDir() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_MkDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MkDir(::grpc::ServerContext* /*context*/, const ::wiscAFS::MkDirReq* /*request*/, ::wiscAFS::MkDirReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMkDir(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RmDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RmDir() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_RmDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RmDir(::grpc::ServerContext* /*context*/, const ::wiscAFS::RmDirReq* /*request*/, ::wiscAFS::RmDirReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRmDir(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SayHello : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SayHello() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_SayHello() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SayHello(::grpc::ServerContext* /*context*/, const ::wiscAFS::HelloRequest* /*request*/, ::wiscAFS::HelloReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSayHello(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAttr() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAttr(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAttr(::grpc::ServerContext* /*context*/, const ::wiscAFS::GetAttrReq* /*request*/, ::wiscAFS::GetAttrReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAttr(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Open : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Open() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Open(context, request, response); }));
    }
    ~WithRawCallbackMethod_Open() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Open(::grpc::ServerContext* /*context*/, const ::wiscAFS::OpenReq* /*request*/, ::wiscAFS::OpenReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Open(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Read : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Read() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->Read(context, request); }));
    }
    ~WithRawCallbackMethod_Read() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Read(::grpc::ServerContext* /*context*/, const ::wiscAFS::ReadReq* /*request*/, ::grpc::ServerWriter< ::wiscAFS::ReadReply>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* Read(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Write : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Write() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackClientStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, ::grpc::ByteBuffer* response) { return this->Write(context, response); }));
    }
    ~WithRawCallbackMethod_Write() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Write(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::wiscAFS::WriteReq>* /*reader*/, ::wiscAFS::WriteReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerReadReactor< ::grpc::ByteBuffer>* Write(
      ::grpc::CallbackServerContext* /*context*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ReadDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ReadDir() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->ReadDir(context, request); }));
    }
    ~WithRawCallbackMethod_ReadDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadDir(::grpc::ServerContext* /*context*/, const ::wiscAFS::ReadDirReq* /*request*/, ::grpc::ServerWriter< ::wiscAFS::ReadDirReply>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* ReadDir(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_MkDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_MkDir() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->MkDir(context, request, response); }));
    }
    ~WithRawCallbackMethod_MkDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MkDir(::grpc::ServerContext* /*context*/, const ::wiscAFS::MkDirReq* /*request*/, ::wiscAFS::MkDirReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* MkDir(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RmDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RmDir() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RmDir(context, request, response); }));
    }
    ~WithRawCallbackMethod_RmDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RmDir(::grpc::ServerContext* /*context*/, const ::wiscAFS::RmDirReq* /*request*/, ::wiscAFS::RmDirReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RmDir(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SayHello : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SayHello() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SayHello(context, request, response); }));
    }
    ~WithRawCallbackMethod_SayHello() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SayHello(::grpc::ServerContext* /*context*/, const ::wiscAFS::HelloRequest* /*request*/, ::wiscAFS::HelloReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SayHello(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAttr() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::wiscAFS::GetAttrReq, ::wiscAFS::GetAttrReply>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::wiscAFS::GetAttrReq, ::wiscAFS::GetAttrReply>* streamer) {
                       return this->StreamedGetAttr(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAttr(::grpc::ServerContext* /*context*/, const ::wiscAFS::GetAttrReq* /*request*/, ::wiscAFS::GetAttrReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAttr(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::wiscAFS::GetAttrReq,::wiscAFS::GetAttrReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Open : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Open() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::wiscAFS::OpenReq, ::wiscAFS::OpenReply>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::wiscAFS::OpenReq, ::wiscAFS::OpenReply>* streamer) {
                       return this->StreamedOpen(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Open() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Open(::grpc::ServerContext* /*context*/, const ::wiscAFS::OpenReq* /*request*/, ::wiscAFS::OpenReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedOpen(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::wiscAFS::OpenReq,::wiscAFS::OpenReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_MkDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_MkDir() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::wiscAFS::MkDirReq, ::wiscAFS::MkDirReply>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::wiscAFS::MkDirReq, ::wiscAFS::MkDirReply>* streamer) {
                       return this->StreamedMkDir(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_MkDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status MkDir(::grpc::ServerContext* /*context*/, const ::wiscAFS::MkDirReq* /*request*/, ::wiscAFS::MkDirReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedMkDir(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::wiscAFS::MkDirReq,::wiscAFS::MkDirReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RmDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RmDir() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::wiscAFS::RmDirReq, ::wiscAFS::RmDirReply>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::wiscAFS::RmDirReq, ::wiscAFS::RmDirReply>* streamer) {
                       return this->StreamedRmDir(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RmDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RmDir(::grpc::ServerContext* /*context*/, const ::wiscAFS::RmDirReq* /*request*/, ::wiscAFS::RmDirReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRmDir(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::wiscAFS::RmDirReq,::wiscAFS::RmDirReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SayHello : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SayHello() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::wiscAFS::HelloRequest, ::wiscAFS::HelloReply>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::wiscAFS::HelloRequest, ::wiscAFS::HelloReply>* streamer) {
                       return this->StreamedSayHello(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SayHello() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SayHello(::grpc::ServerContext* /*context*/, const ::wiscAFS::HelloRequest* /*request*/, ::wiscAFS::HelloReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSayHello(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::wiscAFS::HelloRequest,::wiscAFS::HelloReply>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetAttr<WithStreamedUnaryMethod_Open<WithStreamedUnaryMethod_MkDir<WithStreamedUnaryMethod_RmDir<WithStreamedUnaryMethod_SayHello<Service > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_Read : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_Read() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::wiscAFS::ReadReq, ::wiscAFS::ReadReply>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::wiscAFS::ReadReq, ::wiscAFS::ReadReply>* streamer) {
                       return this->StreamedRead(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_Read() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Read(::grpc::ServerContext* /*context*/, const ::wiscAFS::ReadReq* /*request*/, ::grpc::ServerWriter< ::wiscAFS::ReadReply>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedRead(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::wiscAFS::ReadReq,::wiscAFS::ReadReply>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_ReadDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_ReadDir() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::wiscAFS::ReadDirReq, ::wiscAFS::ReadDirReply>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::wiscAFS::ReadDirReq, ::wiscAFS::ReadDirReply>* streamer) {
                       return this->StreamedReadDir(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_ReadDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ReadDir(::grpc::ServerContext* /*context*/, const ::wiscAFS::ReadDirReq* /*request*/, ::grpc::ServerWriter< ::wiscAFS::ReadDirReply>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedReadDir(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::wiscAFS::ReadDirReq,::wiscAFS::ReadDirReply>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_Read<WithSplitStreamingMethod_ReadDir<Service > > SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetAttr<WithStreamedUnaryMethod_Open<WithSplitStreamingMethod_Read<WithSplitStreamingMethod_ReadDir<WithStreamedUnaryMethod_MkDir<WithStreamedUnaryMethod_RmDir<WithStreamedUnaryMethod_SayHello<Service > > > > > > > StreamedService;
};

}  // namespace wiscAFS


#endif  // GRPC_wiscAFS_2eproto__INCLUDED
